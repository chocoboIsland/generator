package ${controllerPackage};

import ${dtoPackage}.${dtoClassName};
import ${servicePackage}.${serviceClassName};
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import site.wangpj.potato.common.microservice.result.ResultModel;
import site.wangpj.potato.common.microservice.result.ResultStatus;
import site.wangpj.potato.common.microservice.controller.BaseController;
import site.wangpj.potato.common.microservice.exception.MicroServiceException;
import java.util.List;

@Slf4j
@RestController
@RequestMapping("/${domainLower}")
public class ${controllerClassName} extends BaseController {

    @Autowired
    ${serviceClassName} ${serviceObjectName};

    @PostMapping(value = "/insert" ,produces = "application/json;charset=UTF-8" )
    public ResultModel<String> insert(@RequestBody ${dtoClassName} ${dtoObjectName})
    {
        int flag=${serviceObjectName}.insert(${dtoObjectName});
        return this.basicResult(flag);
    }

    @PostMapping(value = "/insertList" ,produces = "application/json;charset=UTF-8" )
    public ResultModel<String> insertList(@RequestBody List<${dtoClassName}> ${dtoObjectName}List)
    {
        int flag=${serviceObjectName}.insertList(${dtoObjectName}List);
        return this.basicResult(flag);
    }

    @PostMapping(value="/deleteAll",produces = "application/json;charset=UTF-8")
    public  ResultModel<String> deleteAll()
    {
        int flag=${serviceObjectName}.deleteAll();
        return this.basicResult(flag);
    }

    @PostMapping(value = "/update",produces = "application/json;charset=UTF-8")
    public ResultModel<String> update(@RequestBody ${dtoClassName} ${dtoObjectName})
    {
        try {
        int flag=${serviceObjectName}.updateByPrimaryKey(${dtoObjectName});
        return this.basicResult(flag);
        } catch (MicroServiceException e) {
        e.printStackTrace();
        ResultModel<String> resultModel= ResultModel.defaultError(e.getMessage());
        resultModel.addCause(e);
        return resultModel;
        }
    }

    @GetMapping(value="/searchById/{id}",produces = "application/json;charset=UTF-8")
    public ResultModel<${dtoClassName}> searchById(@PathVariable("id") long id)
    {
        ${dtoClassName} dto=${serviceObjectName}.selectByPrimaryKey(id);
        return new ResultModel<>(ResultStatus.SUCCESS,dto);
    }

    @GetMapping(value="/serachAll",produces = "application/json;charset=UTF-8")
    public  ResultModel<List<${dtoClassName}>> searchAll()
    {
        List<${dtoClassName}> ${dtoObjectName}List=${serviceObjectName}.selectAll();
        int size=${dtoObjectName}List.size();
        return new ResultModel<>(ResultStatus.SUCCESS,${dtoObjectName}List);
    }
}
